package tgBot

import (
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/joho/godotenv"
	"github.com/zeze322/telegram-bot-weather-forecast/internal/weather"
	"os"
)

const hPaToMm = 0.75

func BotInit() error {
	err := godotenv.Load(".env")
	if err != nil {
		return fmt.Errorf("failed to load .env file")
	}

	bot, err := tgbotapi.NewBotAPI(os.Getenv("TELEGRAM_TOKEN"))
	if err != nil {
		return fmt.Errorf("failed to init telegram bot")
	}

	bot.Debug = true

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		w, err := weather.Forecast(update.Message.Text, os.Getenv("WEATHER_TOKEN"))
		if err != nil {
			continue
		}

		var text string

		if w.Condition == nil {
			text = fmt.Sprintf("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ `%s`. –û—à–∏–±–∫–∞ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –≥–æ—Ä–æ–¥–∞", update.Message.Text)
			msg := tgbotapi.NewMessage(update.Message.Chat.ID, text)
			bot.Send(msg)
			continue
		}

		switch w.Condition[0].Description {
		case "–ø–∞—Å–º—É—Ä–Ω–æ":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  üå•Ô∏è
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		case "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  ‚õÖ
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		case "—è—Å–Ω–æ":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  ‚òÄÔ∏è
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		case "–ø–ª–æ—Ç–Ω—ã–π —Ç—É–º–∞–Ω":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  üå´Ô∏è
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		case "–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  üå®Ô∏è
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.Ô∏è
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		case "–¥–æ–∂–¥—å":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  üåßÔ∏è
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		case "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  ‚òÅÔ∏è
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		case "–Ω–µ–±–æ–ª—å—à–æ–π –¥–æ–∂–¥—å":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  üå®Ô∏è
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		case "–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  ‚õÖ
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		case "—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å":
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s  üå®Ô∏è
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		default:
			text = fmt.Sprintf(`%s
–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: %.f¬∞C, %s
–î–∞–≤–ª–µ–Ω–∏–µ: %.f –º–º —Ä—Ç. —Å—Ç.
–í–µ—Ç–µ—Ä: %.f –º/—Å
–í–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%`, w.Name, w.Main.Temp, w.Condition[0].Description, float64(w.Main.Pressure)*hPaToMm, w.Wind.Speed, w.Main.Humidity)
		}

		msg := tgbotapi.NewMessage(update.Message.Chat.ID, text)
		bot.Send(msg)
	}

	return nil
}
